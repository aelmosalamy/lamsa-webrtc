[{"D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\index.js":"1","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\App.js":"2","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\HomeScreen\\index.js":"3","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\MeetingScreen\\index.js":"4","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\utils\\socketFunctions.js":"5","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\HomeScreen\\components\\UserDataModal.js":"6","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\utils\\meetingIdUtils.js":"7","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\MeetingScreen\\components\\Video.js":"8","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\utils\\selectElementContents.js":"9","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\utils\\mediaFunctions.js":"10","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\MeetingScreen\\components\\BottomNavigation.js":"11","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\MeetingScreen\\components\\VideoTiles.js":"12","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\MeetingScreen\\components\\ChatBox.js":"13"},{"size":385,"mtime":1628507838760,"results":"14","hashOfConfig":"15"},{"size":712,"mtime":1627647092877,"results":"16","hashOfConfig":"15"},{"size":3376,"mtime":1628426855576,"results":"17","hashOfConfig":"15"},{"size":15057,"mtime":1628497448161,"results":"18","hashOfConfig":"15"},{"size":8045,"mtime":1627550106827,"results":"19","hashOfConfig":"15"},{"size":1476,"mtime":1627550106819,"results":"20","hashOfConfig":"15"},{"size":407,"mtime":1627550106819,"results":"21","hashOfConfig":"15"},{"size":976,"mtime":1628497448161,"results":"22","hashOfConfig":"15"},{"size":265,"mtime":1627550106819,"results":"23","hashOfConfig":"15"},{"size":1161,"mtime":1627821085017,"results":"24","hashOfConfig":"15"},{"size":1810,"mtime":1628514622946,"results":"25","hashOfConfig":"15"},{"size":817,"mtime":1628426855625,"results":"26","hashOfConfig":"15"},{"size":1581,"mtime":1628497448160,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"1nlbu71",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"31"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"31"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\index.js",["64","65"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport $ from 'jquery';\r\nimport Popper from 'popper.js';\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n)\r\n",["66","67"],"D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\App.js",["68","69"],"import './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport { Button } from 'react-bootstrap';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport MeetingScreen from './screens/MeetingScreen';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<div className=\"App-background\"></div>\r\n\t\t\t\t<div className=\"App-overlay\"></div>\r\n\t\t\t\t<div style={{ position: 'relative' }}>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t{/* Route order matters, due to precedence */}\r\n\t\t\t\t\t\t<Route path=\"/:meeting_id\" component={MeetingScreen} />\r\n\t\t\t\t\t\t<Route path=\"/\" component={HomeScreen} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\HomeScreen\\index.js",["70","71","72"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n\tCard,\r\n\tAlert,\r\n\tButton,\r\n\tForm,\r\n\tFormControl,\r\n\tInputGroup,\r\n\tRow,\r\n\tCol,\r\n} from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport meetingIdUtils from '../../utils/meetingIdUtils';\r\nimport UserDataModal from './components/UserDataModal';\r\n\r\nimport './styles.css';\r\n\r\nconst HomeScreen = () => {\r\n\tconst [showModal, setShowModal] = useState(false);\r\n\tconst [isNewMeeting, setIsNewMeeting] = useState(true);\r\n\tconst [newMeetingId, setNewMeetingId] = useState(undefined);\r\n\tconst [invalidMeetingId, setInvalidMeetingId] = useState(undefined);\r\n\tconst [joinMeetingId, setJoinMeetingId] = useState(undefined);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst handleSubmitModal = userData => {\r\n\t\tsessionStorage.setItem('me', JSON.stringify(userData));\r\n\t\t// Create and move to new room\r\n\t\thistory.push(`/${isNewMeeting ? newMeetingId : joinMeetingId}`);\r\n\t};\r\n\r\n\tconst handleNewMeetingClick = () => {\r\n\t\tsetIsNewMeeting(true);\r\n\t\tsetNewMeetingId(meetingIdUtils.generateId());\r\n\r\n\t\tsetShowModal(true);\r\n\t};\r\n\r\n\tconst handleJoinMeetingSubmit = async e => {\r\n\t\te.preventDefault();\r\n\t\tconst data = await fetch(\r\n\t\t\t`http://localhost:5000/meetings/${joinMeetingId}/exists`\r\n\t\t);\r\n\t\tif (meetingIdUtils.isValid(joinMeetingId) && (await data.json())) {\r\n\t\t\tsetInvalidMeetingId(false);\r\n\t\t\tsetIsNewMeeting(false);\r\n\t\t\tsetShowModal(true);\r\n\t\t} else {\r\n\t\t\tsetInvalidMeetingId(true);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (joinMeetingId)\r\n\t\t\tsetInvalidMeetingId(!meetingIdUtils.isValid(joinMeetingId));\r\n\t}, [joinMeetingId]);\r\n\r\n\treturn (\r\n\t\t<div className=\"HomeScreen container\">\r\n\t\t\t<UserDataModal\r\n\t\t\t\tmeeting_id={isNewMeeting ? newMeetingId : joinMeetingId}\r\n\t\t\t\tshow={showModal ? showModal : undefined}\r\n\t\t\t\thandleClose={() => setShowModal(false)}\r\n\t\t\t\thandleSubmit={handleSubmitModal}\r\n\t\t\t/>\r\n\t\t\t<Card id=\"HomeScreen__card\" style={{}}>\r\n\t\t\t\t<Card.Body>\r\n\t\t\t\t\t<Card.Title>Welcome to WebRTC Meet!</Card.Title>\r\n\t\t\t\t\t<Card.Subtitle className=\"mb-4 text-muted\">\r\n\t\t\t\t\t\tWe provide peer-to-peer video and audio chat.\r\n\t\t\t\t\t</Card.Subtitle>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tonClick={handleNewMeetingClick}\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\tclassName=\"w-100 w-md-auto\"\r\n\t\t\t\t\t\thref=\"#\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCreate a new meeting\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<p className=\"text-secondary text-center my-4\">\r\n\t\t\t\t\t\tor provide a <span className=\"fw-bold\">Meeting ID</span>{' '}\r\n\t\t\t\t\t\tbelow\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<Form onSubmit={handleJoinMeetingSubmit}>\r\n\t\t\t\t\t\t{/* <InputGroup className='mb-3'> */}\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col xs={12} sm=\"auto\">\r\n\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Meeting ID\"\r\n\t\t\t\t\t\t\t\t\tisValid={invalidMeetingId === false}\r\n\t\t\t\t\t\t\t\t\tisInvalid={invalidMeetingId === true}\r\n\t\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\t\tsetJoinMeetingId(e.target.value);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t\t\t\tMeeting ID is invalid or doesn't exist\r\n\t\t\t\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={12} sm=\"auto\" className=\"mt-2 mt-sm-0\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={handleJoinMeetingSubmit}\r\n\t\t\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"w-100\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tJoin meeting\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t{/* </InputGroup> */}\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default HomeScreen;\r\n","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\MeetingScreen\\index.js",["73","74"],"import { io } from 'socket.io-client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useHistory, useParams, Prompt } from 'react-router';\r\n\r\nimport { getLocalMediaStream } from '../../utils/mediaFunctions';\r\nimport meetingIdUtils from '../../utils/meetingIdUtils';\r\n\r\nimport BottomNavigation from './components/BottomNavigation';\r\nimport ChatBox from './components/ChatBox';\r\nimport VideoTiles from './components/VideoTiles';\r\n\r\nimport './styles.css';\r\nconst CHIME = '/chime.webm';\r\n\r\nconst WEBSOCKETS_SERVER = 'ws://localhost:5000';\r\nconst ICE_SERVERS = [{ urls: ['stun:stun.l.google.com:19302'] }];\r\n\r\nvar peerConnections = {};\r\nvar remoteMediaStreams = {};\r\nvar localMediaStream = undefined;\r\n\r\nconst MeetingScreen = () => {\r\n\tconst history = useHistory();\r\n\tconst { meeting_id } = useParams();\r\n\r\n\tconst [userData, setUserData] = useState(\r\n\t\tJSON.parse(sessionStorage.getItem('me'))\r\n\t);\r\n\tconst [stateSocket, setStateSocket] = useState(undefined);\r\n\tconst [others, setOthers] = useState({});\r\n\r\n\tconst [stateLocalMediaStream, setStateLocalMediaStream] =\r\n\t\tuseState(undefined);\r\n\tconst [stateRemoteMediaStreams, setStateRemoteMediaStreams] = useState({});\r\n\r\n\tconst [messages, setMessages] = useState([]);\r\n\r\n\tconst chat_SendMsgHandler = msg => {\r\n\t\tconsole.log('Message passed to server...');\r\n\r\n\t\tstateSocket?.emit('chat message', meeting_id, msg, success => {\r\n\t\t\tif (!success) return console.error('Message sending failed!');\r\n\t\t\t// This is our message, make sure it says \"You\"\r\n\t\t\tObject.assign(msg, { sender: 'You' });\r\n\t\t\tsetMessages(old_msg => old_msg.concat(msg));\r\n\t\t\tconsole.log('SUCCESS: Message sent');\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleMute = setMutedSlash => {\r\n\t\ttry {\r\n\t\t\tconsole.log('MUTE');\r\n\t\t\tconst track = stateLocalMediaStream?.getAudioTracks()[0];\r\n\r\n\t\t\ttrack.enabled = !track.enabled;\r\n\t\t\tsetMutedSlash(!track.enabled);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleVideo = setVideoSlash => {\r\n\t\ttry {\r\n\t\t\tconsole.log('VIDEO');\r\n\r\n\t\t\tconst track = stateLocalMediaStream?.getVideoTracks()[0];\r\n\r\n\t\t\ttrack.enabled = !track.enabled;\r\n\t\t\tsetVideoSlash(!track.enabled);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t}\r\n\t};\r\n\r\n\tfunction Area(Increment, Count, Width, Height, Margin = 10) {\r\n\t\tlet i = 0;\r\n\t\tlet w = 0;\r\n\t\tlet h = Increment * 0.75 + Margin * 2;\r\n\t\twhile (i < Count) {\r\n\t\t\tif (w + Increment > Width) {\r\n\t\t\t\tw = 0;\r\n\t\t\t\th = h + Increment * 0.75 + Margin * 2;\r\n\t\t\t}\r\n\t\t\tw = w + Increment + Margin * 2;\r\n\t\t\ti++;\r\n\t\t}\r\n\t\tif (h > Height) return false;\r\n\t\telse return Increment;\r\n\t}\r\n\r\n\tfunction Dish() {\r\n\t\tlet Margin = 10;\r\n\t\tlet Scenary = document.getElementById('VideoTiles__Row');\r\n\t\tlet Width = Scenary.offsetWidth - Margin * 2;\r\n\t\tlet Height = Scenary.offsetHeight - Margin * 2;\r\n\t\tlet Cameras = document.getElementsByClassName(\r\n\t\t\t'VideoTiles__VideoWrapper'\r\n\t\t);\r\n\t\tlet max = 0;\r\n\r\n\t\tlet i = 1;\r\n\t\twhile (i < 5000) {\r\n\t\t\tlet w = Area(i, Cameras.length, Width, Height, Margin);\r\n\t\t\tif (w === false) {\r\n\t\t\t\tmax = i - 1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t}\r\n\r\n\t\tmax = max - Margin * 2;\r\n\t\tsetWidth(max, Margin);\r\n\t}\r\n\r\n\tfunction setWidth(width, margin) {\r\n\t\tlet Cameras = document.getElementsByClassName(\r\n\t\t\t'VideoTiles__VideoWrapper'\r\n\t\t);\r\n\t\tfor (var s = 0; s < Cameras.length; s++) {\r\n\t\t\tCameras[s].style.width = width + 'px';\r\n\t\t\tCameras[s].style.margin = margin + 'px';\r\n\t\t\tCameras[s].style.height = width * 0.75 + 'px';\r\n\t\t}\r\n\t}\r\n\r\n\twindow.addEventListener(\r\n\t\t'load',\r\n\t\tfunction (event) {\r\n\t\t\tDish();\r\n\t\t\twindow.onresize = Dish;\r\n\t\t},\r\n\t\tfalse\r\n\t);\r\n\r\n\t/*\r\n\tuseEffect(() => {\r\n\t\t// Prompt user before leaving the room, also do necessary clean up\r\n\t\t// (terminate socket connection with server), the termination has to be done\r\n\t\t// manually due to this being a Single Page App, since routes are completely\r\n\t\t// visual, the page is never left/unloaded, hence connected sockets must be\r\n\t\t// closed manually.\r\n\t\tconsole.log('Started listening to route changes');\r\n\t}, []);*/\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('stateRemoteMediaStreams', stateRemoteMediaStreams);\r\n\t// }, [stateRemoteMediaStreams]);\r\n\r\n\t// Request media stream and create connection through sockets\r\n\tuseEffect(() => {\r\n\t\t// Don't run socket initialization if meeting id is not valid\r\n\t\tif (!meetingIdUtils.isValid(meeting_id)) return;\r\n\t\t// Don't run socket initialization if socket exists\r\n\t\tif (stateSocket === undefined) {\r\n\t\t\tconst socket = io(WEBSOCKETS_SERVER);\r\n\r\n\t\t\t// Fires once the socket \"opens\" a connection with WebSockets server\r\n\t\t\tsocket.on('connect', async () => {\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t`CONNECTED to signaling server. socket id is ${socket.id}`\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Request access to mediaDevices and pass in a callback to peer up!\r\n\t\t\t\tlocalMediaStream = await getLocalMediaStream({\r\n\t\t\t\t\tvideo: true,\r\n\t\t\t\t\taudio: true,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsetStateLocalMediaStream(localMediaStream);\r\n\r\n\t\t\t\t// Initialize sessionStorage\r\n\t\t\t\t// sessionStorage.clear();\r\n\t\t\t\tconst newUserData = Object.assign({}, userData, {\r\n\t\t\t\t\tid: socket.id,\r\n\t\t\t\t});\r\n\r\n\t\t\t\tuserData &&\r\n\t\t\t\t\tsessionStorage.setItem('me', JSON.stringify(newUserData));\r\n\t\t\t\tsetUserData(newUserData);\r\n\t\t\t\tsessionStorage.setItem('others', JSON.stringify({}));\r\n\r\n\t\t\t\tsocket.emit('join meeting', meeting_id, newUserData, () => {\r\n\t\t\t\t\tconsole.log(`You joined meeting [${meeting_id}].`);\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Get data of other people in room (if any)\r\n\t\t\t\tsocket.emit('get others data', meeting_id, others => {\r\n\t\t\t\t\tconsole.log('Got other joinees data :D', others);\r\n\t\t\t\t\tupdateSessionStorage(obj => {\r\n\t\t\t\t\t\treturn others;\r\n\t\t\t\t\t}, 'others');\r\n\t\t\t\t\tsetOthers(others);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\t// Fires once the socket \"closes\" the connection existing between it and the\r\n\t\t\t// WebSocket server\r\n\t\t\tsocket.on('disconnect', () => {\r\n\t\t\t\tconsole.log('DISCONNECTED from signaling server.');\r\n\r\n\t\t\t\t// Clear sessionStorage\r\n\t\t\t\t// sessionStorage.clear(); (No need)\r\n\r\n\t\t\t\t// Nullify peer streams\r\n\t\t\t\tremoteMediaStreams = {};\r\n\t\t\t\tsetStateRemoteMediaStreams(remoteMediaStreams);\r\n\r\n\t\t\t\t// Close existing peer connections\r\n\t\t\t\tfor (let peer_id in peerConnections) {\r\n\t\t\t\t\tpeerConnections[peer_id].close();\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log('Peer connectioned closed.');\r\n\r\n\t\t\t\t// Reset peerConnections\r\n\t\t\t\tpeerConnections = {};\r\n\t\t\t});\r\n\r\n\t\t\tsocket.on('someone joined', (id, userData) => {\r\n\t\t\t\tconsole.log(`${id} joined the meeting`);\r\n\r\n\t\t\t\t// Play a little audio indicator\r\n\t\t\t\tnew Audio(CHIME).play();\r\n\r\n\t\t\t\t// Add him to session\r\n\t\t\t\tupdateSessionStorage(obj => {\r\n\t\t\t\t\tobj[id] = userData;\r\n\t\t\t\t\tsetOthers(obj);\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}, 'others');\r\n\t\t\t});\r\n\r\n\t\t\tsocket.on('someone left', id => {\r\n\t\t\t\tconsole.log(`${id} left the meeting`);\r\n\r\n\t\t\t\t// Remote the media stream associated with him\r\n\t\t\t\tdelete remoteMediaStreams[id];\r\n\t\t\t\tsetStateRemoteMediaStreams(remoteMediaStreams);\r\n\r\n\t\t\t\t// Remove him from session\r\n\t\t\t\tupdateSessionStorage(obj => {\r\n\t\t\t\t\tdelete obj[id];\r\n\t\t\t\t\tsetOthers(obj);\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t}, 'others');\r\n\t\t\t});\r\n\r\n\t\t\tsocket.on('chat message', msg => {\r\n\t\t\t\tconsole.log(`Message received: \"${msg}\"`);\r\n\t\t\t\tsetMessages(old_msgs => old_msgs.concat(msg));\r\n\t\t\t});\r\n\r\n\t\t\tsocket.on('webrtc:addPeer', (peer_id, should_create_offer) => {\r\n\t\t\t\tconsole.log(`Signaling server said to add peer [${peer_id}]`);\r\n\r\n\t\t\t\tif (peer_id in peerConnections) {\r\n\t\t\t\t\treturn console.log('Already connected to peer', peer_id);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst peer_connection = new RTCPeerConnection(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ticeServers: ICE_SERVERS,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Might be needed (does something about Firefox being able to communicate with Chrome)\r\n\t\t\t\t\t\toptional: [{ DtlsSrtpKeyAgreement: true }],\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\tObject.assign(peerConnections, {\r\n\t\t\t\t\t[peer_id]: peer_connection,\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log('Peer added', peerConnections);\r\n\r\n\t\t\t\t// Listen for 'icecandidate' events on the peer_connection\r\n\t\t\t\tpeer_connection.onicecandidate = e => {\r\n\t\t\t\t\tif (e.candidate)\r\n\t\t\t\t\t\tsocket.emit(\r\n\t\t\t\t\t\t\t'webrtc:relayICECandidate',\r\n\t\t\t\t\t\t\tmeeting_id,\r\n\t\t\t\t\t\t\tpeer_id,\r\n\t\t\t\t\t\t\te.candidate\r\n\t\t\t\t\t\t);\r\n\t\t\t\t};\r\n\r\n\t\t\t\tpeer_connection.ontrack = e => {\r\n\t\t\t\t\tconsole.log('A track was received through peer connection');\r\n\t\t\t\t\t// Each stream will cause 2 track event calls (one for \"audio\" and one for \"video\"), we will act only in one of them, I choose the audio track because we might have video off in some instances, then we will grab the stream object from the event only once.\r\n\t\t\t\t\tif (e.track.kind === 'video') {\r\n\t\t\t\t\t\t// It's important that you mutate the local remoteMediaStream as you set the setRemoteMediaStreams state! Otherwise you gonna always have 1 remote media stream at a time\r\n\t\t\t\t\t\tObject.assign(remoteMediaStreams, {\r\n\t\t\t\t\t\t\t// Use peer_id as a key storing that peer's streams\r\n\t\t\t\t\t\t\t[peer_id]: e.streams[0],\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tsetStateRemoteMediaStreams(\r\n\t\t\t\t\t\t\tObject.assign({}, remoteMediaStreams)\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t// Audio indicator when you start receiving remote streams :D Idk why I love this feature so much\r\n\t\t\t\t\t\tnew Audio(CHIME).play();\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Add local track to our peer connection\r\n\t\t\t\tconsole.log('Sending localMediaStream over peer connection');\r\n\t\t\t\tlocalMediaStream &&\r\n\t\t\t\t\tlocalMediaStream.getTracks().forEach(track => {\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t'Adding localMediaStream track to peer connection',\r\n\t\t\t\t\t\t\ttrack\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tpeer_connection.addTrack(track, localMediaStream);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// Only one side of the peer connection should send offer\r\n\t\t\t\tif (should_create_offer) {\r\n\t\t\t\t\tconsole.log('Creating RTC offer to ', peer_id);\r\n\t\t\t\t\tpeer_connection\r\n\t\t\t\t\t\t.createOffer()\r\n\t\t\t\t\t\t.then(localSessionDescription => {\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'Local offer/session description is: ',\r\n\t\t\t\t\t\t\t\tlocalSessionDescription\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tpeer_connection\r\n\t\t\t\t\t\t\t\t.setLocalDescription(localSessionDescription)\r\n\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\tsocket.emit(\r\n\t\t\t\t\t\t\t\t\t\t'webrtc:relaySessionDescription',\r\n\t\t\t\t\t\t\t\t\t\tmeeting_id,\r\n\t\t\t\t\t\t\t\t\t\tpeer_id,\r\n\t\t\t\t\t\t\t\t\t\tlocalSessionDescription\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t\t'Offer setLocalDescription succeeded'\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\t\t\t\t'Offer setLocalDescription failed',\r\n\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\tconsole.log('Error sending offer:', error);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsocket.on('webrtc:removePeer', peer_id => {\r\n\t\t\t\tconsole.log(`Signaling server said to remove peer: ${peer_id}`);\r\n\t\t\t\t// Remove stream from peer streams\r\n\t\t\t\tif (peer_id in remoteMediaStreams) {\r\n\t\t\t\t\t// Non-mutating removal\r\n\r\n\t\t\t\t\tdelete remoteMediaStreams[peer_id];\r\n\r\n\t\t\t\t\tsetStateRemoteMediaStreams(remoteMediaStreams);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Close peer connection and delete it from our peerConnections object\r\n\t\t\t\tif (peer_id in peerConnections) {\r\n\t\t\t\t\tconsole.log('Removing peer', peerConnections);\r\n\t\t\t\t\tpeerConnections[peer_id].close();\r\n\r\n\t\t\t\t\tdelete peerConnections[peer_id];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsocket.on(\r\n\t\t\t\t'webrtc:sessionDescription',\r\n\t\t\t\t(peer_id, remote_description) => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'Remote description received: ',\r\n\t\t\t\t\t\tremote_description\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tconsole.log(peer_id);\r\n\t\t\t\t\tconsole.log('peerConnections', peerConnections);\r\n\t\t\t\t\tconst peer = peerConnections[peer_id];\r\n\r\n\t\t\t\t\tconst remoteSessionDescription = new RTCSessionDescription(\r\n\t\t\t\t\t\tremote_description\r\n\t\t\t\t\t);\r\n\t\t\t\t\t// Set remote description\r\n\t\t\t\t\tpeer.setRemoteDescription(remoteSessionDescription)\r\n\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\tif (remote_description.type == 'offer') {\r\n\t\t\t\t\t\t\t\tconsole.log('Creating answer');\r\n\t\t\t\t\t\t\t\tpeer.createAnswer().then(local_description => {\r\n\t\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t\t`Answer description is: `,\r\n\t\t\t\t\t\t\t\t\t\tlocal_description\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\tpeer.setLocalDescription(local_description)\r\n\t\t\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsocket.emit(\r\n\t\t\t\t\t\t\t\t\t\t\t\t'webrtc:relaySessionDescription',\r\n\t\t\t\t\t\t\t\t\t\t\t\tmeeting_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tpeer_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tlocal_description\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Answer setLocalDescription succeeded'\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\t\t\t\t\t\t'Answer setLocalDescription error:',\r\n\t\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\t\tconsole.log('setRemoteDescription error: ', error);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'Remote session description: ',\r\n\t\t\t\t\t\tremoteSessionDescription\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tsocket.on('webrtc:iceCandidate', (peer_id, ice_candidate) => {\r\n\t\t\t\tconst peer = peerConnections[peer_id];\r\n\r\n\t\t\t\tpeer.addIceCandidate(new RTCIceCandidate(ice_candidate));\r\n\t\t\t});\r\n\r\n\t\t\tsetStateSocket(socket);\r\n\t\t\tconsole.log('SOCKET CREATED');\r\n\t\t}\r\n\t}, [stateSocket, meeting_id, userData]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Function returned by the useEffect callback is ran on unmount (idk why i\r\n\t\t// never learned about this till now lol)\r\n\t\treturn () => {\r\n\t\t\t// Terminate socket\r\n\t\t\tif (stateSocket) {\r\n\t\t\t\tstateSocket.disconnect();\r\n\t\t\t\tsetStateSocket(undefined);\r\n\t\t\t\tconsole.log('SOCKET TERMINATED');\r\n\t\t\t}\r\n\t\t};\r\n\t\t// If socket isn't a dependency, the value of socket inside this hook will\r\n\t\t// always stay as \"undefined\", hence keeping socket as dependency updates\r\n\t\t// the value of socket everytime socket changes, think of variable in\r\n\t\t// useEffect as byVal not byRef\r\n\t}, [stateSocket]);\r\n\r\n\tuseEffect(() => {\r\n\t\tDish();\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"MeetingScreen\">\r\n\t\t\t{meetingIdUtils.isValid(meeting_id) ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Prompt\r\n\t\t\t\t\t\tmessage={location =>\r\n\t\t\t\t\t\t\t`Are you sure you wanna leave your current meeting?`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Row style={{ height: '100%' }}>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<VideoTiles\r\n\t\t\t\t\t\t\t\tjoinees={\r\n\t\t\t\t\t\t\t\t\tstateSocket\r\n\t\t\t\t\t\t\t\t\t\t? [\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid: stateSocket.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuserData,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstream: stateLocalMediaStream,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t...Object.keys(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstateRemoteMediaStreams\r\n\t\t\t\t\t\t\t\t\t\t\t\t).map(id => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuserData: others[id],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstream: stateRemoteMediaStreams[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\t\t\t  ]\r\n\t\t\t\t\t\t\t\t\t\t: []\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t<ChatBox\r\n\t\t\t\t\t\t\t\tusername={userData.name}\r\n\t\t\t\t\t\t\t\topen={true}\r\n\t\t\t\t\t\t\t\tmessages={messages}\r\n\t\t\t\t\t\t\t\tsendMessageHandler={chat_SendMsgHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<BottomNavigation\r\n\t\t\t\t\t\thandleMute={handleMute}\r\n\t\t\t\t\t\thandleVideo={handleVideo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<p className=\"text-danger\">\r\n\t\t\t\t\t\tERROR: Invalid meeting id {meeting_id}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// Given a function and an item, updates sessionStorage\r\nconst updateSessionStorage = (fn, item) => {\r\n\tif (sessionStorage.getItem(item)) {\r\n\t\tconst value = JSON.parse(sessionStorage.getItem(item));\r\n\t\tsessionStorage.setItem(item, JSON.stringify(fn(value)));\r\n\t}\r\n};\r\n\r\nexport default MeetingScreen;\r\n","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\utils\\socketFunctions.js",["75","76"],"D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\HomeScreen\\components\\UserDataModal.js",["77","78"],"import { useState, useEffect } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport selectElementContents from '../../../utils/selectElementContents';\r\n\r\nconst UserDataModal = ({ show, handleClose, handleSubmit, meeting_id }) => {\r\n\tconst [name, setName] = useState('');\r\n\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<Modal animation={false} show={show ? show : undefined} onHide={() => {}}>\r\n\t\t\t<Modal.Header>\r\n\t\t\t\t<Modal.Title>\r\n\t\t\t\t\tJoining room{' '}\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tonDoubleClick={({ target }) => {\r\n\t\t\t\t\t\t\tselectElementContents(target);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName=\"text-info\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{meeting_id}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Modal.Title>\r\n\t\t\t</Modal.Header>\r\n\t\t\t<Form\r\n\t\t\t\tonSubmit={e => {\r\n\t\t\t\t\thandleSubmit({ name });\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t<Form.Label>Your name?</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tonChange={e => setName(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\t\t*This name is going to be displayed to others in the\r\n\t\t\t\t\t\t\tmeeting\r\n\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"outline-secondary\" onClick={handleClose}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t\tJoin\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Form>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default UserDataModal;\r\n","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\utils\\meetingIdUtils.js",["79"],"/*\r\n * Provides utilities to generate room ids and check their validity as well.\r\n * Uses nano id.\r\n */\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst LENGTH = 2;\r\n\r\nconst generateId = () => {\r\n\treturn nanoid(LENGTH);\r\n};\r\n\r\nconst isValid = id => {\r\n\tconst regex = new RegExp(`^[\\\\w\\\\d-_]{${LENGTH}}$`);\r\n\r\n\treturn regex.test(id);\r\n};\r\n\r\nexport default { generateId, isValid };\r\nexport { generateId, isValid }\r\n","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\MeetingScreen\\components\\Video.js",["80","81"],"import { cyan } from 'colors';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Video = ({ user, isLocal, muted = false, ...props }) => {\r\n\tconst videoRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\t// Leveraging babel to use new spec's optional chaining :D\r\n\t\tif (!(user?.stream && videoRef.current)) return;\r\n\t\tvideoRef.current.srcObject = user.stream;\r\n\r\n\t\tvideoRef.current.defaultMuted = muted;\r\n\t\tvideoRef.current.muted = muted;\r\n\t}, [user, videoRef.current, muted]);\r\n\r\n\treturn user?.stream ? (\r\n\t\t<div className=\"VideoTiles__VideoWrapper\">\r\n\t\t\t{/* <code>{JSON.stringify(user.userData)}</code> */}\r\n\t\t\t<video\r\n\t\t\t\t{...props}\r\n\t\t\t\tclassName=\"VideoTiles__Video\"\r\n\t\t\t\tid={user.id}\r\n\t\t\t\tref={videoRef}\r\n\t\t\t\tautoPlay\r\n\t\t\t/>\r\n\t\t\t<p className=\"VideoTiles__username\">\r\n\t\t\t\t{isLocal ? 'You' : user.userData?.name}{' '}\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<Spinner animation=\"grow\" role=\"status\" />\r\n\t);\r\n};\r\n\r\nexport default Video;\r\n","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\utils\\selectElementContents.js",[],"D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\utils\\mediaFunctions.js",["82","83","84","85"],"const MUTE_AUDIO_BY_DEFAULT = false;\r\nlet local_media_stream = {};\r\nlet USE_VIDEO = true;\r\n\r\nconst attachMediaStreamToElement = (stream, element) => {\r\n\telement.srcObject = stream;\r\n};\r\n\r\n// Returns stream and runs a callback afterwards\r\nconst getLocalMediaStream = async constraints => {\r\n\tconsole.log('Requesting access to media devices.');\r\n\ttry {\r\n\t\tconst stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n\t\tconsole.log(\r\n\t\t\t'Access granted to media devices. Stream acquired:',\r\n\t\t\tstream\r\n\t\t);\r\n\t\t// local_media_stream = stream;\r\n\t\t// let local_media_element = USE_VIDEO\r\n\t\t// ? document.createElement('video')\r\n\t\t// : document.createElement('audio');\r\n\t\t// local_media_element.autoplay = true;\r\n\t\t// local_media_element.muted = true;\r\n\t\t// local_media_element.controls = true;\r\n\t\t// document.body.append(local_media_element);\r\n\t\t// attachMediaStreamToElement(stream, local_media_element);\r\n\t\treturn stream;\r\n\t} catch (error) {\r\n\t\tconsole.error('Media devices access request was rejected.', error);\r\n\t}\r\n};\r\n\r\nexport { attachMediaStreamToElement, getLocalMediaStream };\r\nexport default { attachMediaStreamToElement, getLocalMediaStream };\r\n","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\MeetingScreen\\components\\BottomNavigation.js",["86","87","88"],"D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\MeetingScreen\\components\\VideoTiles.js",["89","90","91","92","93","94","95","96","97"],"import { useState, useEffect } from 'react';\r\nimport {\r\n\tButton,\r\n\tForm,\r\n\tFormControl,\r\n\tInputGroup,\r\n\tRow,\r\n\tCol,\r\n\tContainer,\r\n} from 'react-bootstrap';\r\nimport Video from './Video';\r\n\r\nconst VideoTiles = ({ joinees }) => {\r\n\t// me = { stream: {...}, userData: {...} }, others = Array<me>\r\n\tconst [me, ...others] = joinees;\r\n\r\n\treturn (\r\n\t\t<div className=\"VideoTiles\">\r\n\t\t\t<div id=\"VideoTiles__Row\">\r\n\t\t\t\t<Video className=\"me\" user={me} isLocal={true} muted={true} />\r\n\t\t\t\t{others.map((other, index, arr) => {\r\n\t\t\t\t\tconsole.log('remote media length', arr.length);\r\n\t\t\t\t\t// other.userData = joinees.find(\r\n\t\t\t\t\t// \tj => j.id === other.id\r\n\t\t\t\t\t// )?.userData;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Video key={index} className=\"remote\" user={other} />\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default VideoTiles;\r\n","D:\\Web Dev\\Adham's Web RTC\\webrtc-demo\\client\\src\\screens\\MeetingScreen\\components\\ChatBox.js",[],{"ruleId":"98","severity":1,"message":"99","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":9},{"ruleId":"98","severity":1,"message":"102","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":14},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"98","severity":1,"message":"107","line":2,"column":50,"nodeType":"100","messageId":"101","endLine":2,"endColumn":54},{"ruleId":"98","severity":1,"message":"108","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":16},{"ruleId":"98","severity":1,"message":"109","line":4,"column":2,"nodeType":"100","messageId":"101","endLine":4,"endColumn":7},{"ruleId":"98","severity":1,"message":"110","line":7,"column":2,"nodeType":"100","messageId":"101","endLine":7,"endColumn":13},{"ruleId":"98","severity":1,"message":"111","line":8,"column":2,"nodeType":"100","messageId":"101","endLine":8,"endColumn":12},{"ruleId":"98","severity":1,"message":"112","line":25,"column":8,"nodeType":"100","messageId":"101","endLine":25,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":390,"column":36,"nodeType":"115","messageId":"116","endLine":390,"endColumn":38},{"ruleId":"113","severity":1,"message":"114","line":226,"column":33,"nodeType":"115","messageId":"116","endLine":226,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":278,"column":1,"nodeType":"119","endLine":278,"endColumn":33},{"ruleId":"98","severity":1,"message":"120","line":1,"column":20,"nodeType":"100","messageId":"101","endLine":1,"endColumn":29},{"ruleId":"98","severity":1,"message":"112","line":10,"column":8,"nodeType":"100","messageId":"101","endLine":10,"endColumn":15},{"ruleId":"117","severity":1,"message":"118","line":19,"column":1,"nodeType":"119","endLine":19,"endColumn":40},{"ruleId":"98","severity":1,"message":"121","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":14},{"ruleId":"122","severity":1,"message":"123","line":15,"column":5,"nodeType":"124","endLine":15,"endColumn":36,"suggestions":"125"},{"ruleId":"98","severity":1,"message":"126","line":1,"column":7,"nodeType":"100","messageId":"101","endLine":1,"endColumn":28},{"ruleId":"98","severity":1,"message":"127","line":2,"column":5,"nodeType":"100","messageId":"101","endLine":2,"endColumn":23},{"ruleId":"98","severity":1,"message":"128","line":3,"column":5,"nodeType":"100","messageId":"101","endLine":3,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":34,"column":1,"nodeType":"119","endLine":34,"endColumn":68},{"ruleId":"98","severity":1,"message":"129","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":19},{"ruleId":"98","severity":1,"message":"130","line":2,"column":29,"nodeType":"100","messageId":"101","endLine":2,"endColumn":37},{"ruleId":"98","severity":1,"message":"131","line":2,"column":39,"nodeType":"100","messageId":"101","endLine":2,"endColumn":53},{"ruleId":"98","severity":1,"message":"132","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":18},{"ruleId":"98","severity":1,"message":"120","line":1,"column":20,"nodeType":"100","messageId":"101","endLine":1,"endColumn":29},{"ruleId":"98","severity":1,"message":"108","line":3,"column":2,"nodeType":"100","messageId":"101","endLine":3,"endColumn":8},{"ruleId":"98","severity":1,"message":"133","line":4,"column":2,"nodeType":"100","messageId":"101","endLine":4,"endColumn":6},{"ruleId":"98","severity":1,"message":"110","line":5,"column":2,"nodeType":"100","messageId":"101","endLine":5,"endColumn":13},{"ruleId":"98","severity":1,"message":"111","line":6,"column":2,"nodeType":"100","messageId":"101","endLine":6,"endColumn":12},{"ruleId":"98","severity":1,"message":"134","line":7,"column":2,"nodeType":"100","messageId":"101","endLine":7,"endColumn":5},{"ruleId":"98","severity":1,"message":"135","line":8,"column":2,"nodeType":"100","messageId":"101","endLine":8,"endColumn":5},{"ruleId":"98","severity":1,"message":"129","line":9,"column":2,"nodeType":"100","messageId":"101","endLine":9,"endColumn":11},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"'Link' is defined but never used.","'Button' is defined but never used.","'Alert' is defined but never used.","'FormControl' is defined but never used.","'InputGroup' is defined but never used.","'history' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'cyan' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'videoRef.current'. Either exclude it or remove the dependency array. Mutable values like 'videoRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["138"],"'MUTE_AUDIO_BY_DEFAULT' is assigned a value but never used.","'local_media_stream' is assigned a value but never used.","'USE_VIDEO' is assigned a value but never used.","'Container' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'useState' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [user, muted]",{"range":"141","text":"142"},[491,522],"[user, muted]"]